{"version":3,"sources":["file:///E:/2.workspace/cocos%20creator/slot/SlotMachine/assets/scripts/Global/AudioManager.ts"],"names":["_decorator","Component","AudioSource","clamp01","ccclass","property","AudioManager","type","onLoad","audioSource","node","getComponent","instance","_instance","playMusic","loop","playing","playSound","clip","volumeScale","playOneShot","setMusicVolume","flag","volume"],"mappings":";;;;;;;;;;;;;;AAASA,MAAAA,U,OAAAA,U;AAAYC,MAAAA,S,OAAAA,S;AACDC,MAAAA,W,OAAAA,W;AAA2BC,MAAAA,O,OAAAA,O;;;;;;;OACzC;AAAEC,QAAAA,OAAF;AAAWC,QAAAA;AAAX,O,GAAwBL,U;;8BAGjBM,Y,WADZF,OAAO,CAAC,cAAD,C,UAKHC,QAAQ,CAAC;AAACE,QAAAA,IAAI,EAAEL;AAAP,OAAD,C,sCALb,MACaI,YADb,SACmCL,SADnC,CAC6C;AAAA;AAAA;;AAAA;AAAA;;AAO3CO,QAAAA,MAAM,GAAG;AACR,eAAKC,WAAL,GAAmB,KAAKC,IAAL,CAAUC,YAAV,CAAuBT,WAAvB,CAAnB;AACA;;AAEoB,mBAARU,QAAQ,GAAI;AACnB,cAAI,KAAKC,SAAT,EAAoB;AAChB,mBAAO,KAAKA,SAAZ;AACH;;AAED,eAAKA,SAAL,GAAiB,IAAIP,YAAJ,EAAjB;AACA,iBAAO,KAAKO,SAAZ;AACH;;AAEDC,QAAAA,SAAS,CAAEC,IAAF,EAAiB;AAEtB,eAAKN,WAAL,CAAiBM,IAAjB,GAAwBA,IAAxB;;AACA,cAAI,CAAC,KAAKN,WAAL,CAAiBO,OAAtB,EAA+B;AAC3B,iBAAKP,WAAL,CAAiBO,OAAjB;AACH;AACJ;;AAEDC,QAAAA,SAAS,CAAEC,IAAF,EAAQC,WAAR,EAAkC;AAAA,cAA1BA,WAA0B;AAA1BA,YAAAA,WAA0B,GAAJ,CAAI;AAAA;;AAEvC,eAAKV,WAAL,CAAiBW,WAAjB,CAA6BF,IAA7B,EAAmCC,WAAnC;AACH;;AAEDE,QAAAA,cAAc,CAAEC,IAAF,EAAgB;AAE1BA,UAAAA,IAAI,GAAGnB,OAAO,CAACmB,IAAD,CAAd;AACA,eAAKb,WAAL,CAAiBc,MAAjB,GAA0BD,IAA1B;AACH;;AArCwC,O,UAE1BT,S;;;;;iBAGuB,I","sourcesContent":["import { _decorator, Component, Node } from 'cc';\nimport { AudioClip, AudioSource, assert, warn, clamp01, resources } from \"cc\";\nconst { ccclass, property } = _decorator;\n\n@ccclass('AudioManager')\nexport class AudioManager  extends Component {\n\n    private static _instance: AudioManager;\n    \n    @property({type: AudioSource})\n \tprivate audioSource: AudioSource|null = null;\n\n \tonLoad() {\n \t\tthis.audioSource = this.node.getComponent(AudioSource);\n \t}\n\n    static get instance () {\n        if (this._instance) {\n            return this._instance;\n        }\n\n        this._instance = new AudioManager();\n        return this._instance;\n    }\n\n    playMusic (loop: boolean) {\n\n        this.audioSource.loop = loop;\n        if (!this.audioSource.playing) {\n            this.audioSource.playing();\n        }\n    }\n\n    playSound (clip, volumeScale: number = 1 ) {\n\n        this.audioSource.playOneShot(clip, volumeScale);\n    }\n\n    setMusicVolume (flag: number) {\n\n        flag = clamp01(flag);\n        this.audioSource.volume = flag;\n    }\n\n}"]}