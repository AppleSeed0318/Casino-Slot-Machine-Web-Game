{"version":3,"sources":["file:///E:/2.workspace/cocos%20creator/slot/SlotMachine/assets/scripts/ReelManager.ts"],"names":["_decorator","Component","AudioSource","AudioClip","assert","game","ReelController","AudioManager","ccclass","property","ReelManager","type","_audioSource","onLoad","Instance","audioSource","node","getComponent","addPersistRootNode","instance","init","start","update","deltaTime","onRunReal","i","reel","length","getPlaying","console","log","setStartDelay","setCount","onRunEvent"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAASA,MAAAA,U,OAAAA,U;AAAYC,MAAAA,S,OAAAA,S;AAAiBC,MAAAA,W,OAAAA,W;AAAaC,MAAAA,S,OAAAA,S;AAAWC,MAAAA,M,OAAAA,M;AAAQC,MAAAA,I,OAAAA,I;;AAG9DC,MAAAA,c,iBAAAA,c;;AACAC,MAAAA,Y,iBAAAA,Y;;;;;;;OAHF;AAAEC,QAAAA,OAAF;AAAWC,QAAAA;AAAX,O,GAAwBT,U;;6BAOjBU,W,WADZF,OAAO,CAAC,aAAD,C,UAKLC,QAAQ,CAAC;AAACE,QAAAA,IAAI;AAAA;AAAA;AAAL,OAAD,C,UAGNF,QAAQ,CAAC;AAACE,QAAAA,IAAI,EAAER;AAAP,OAAD,C,sCARb,MACaO,WADb,SACiCT,SADjC,CAC2C;AAAA;AAAA;;AAAA;;AAAA;;AAAA,eAUvCW,YAVuC,GAUX,IAVW;AAAA;;AAY1CC,QAAAA,MAAM,GAAG;AACR,eAAKC,QAAL,GAAgB,IAAhB;AAEM,cAAMC,WAAW,GAAG,KAAKC,IAAL,CAAUC,YAAV,CAAuBf,WAAvB,CAApB;AACAE,UAAAA,MAAM,CAACW,WAAD,CAAN;AACA,eAAKH,YAAL,GAAoBG,WAApB;AAGAV,UAAAA,IAAI,CAACa,kBAAL,CAAwB,KAAKF,IAA7B;AAGA;AAAA;AAAA,4CAAaG,QAAb,CAAsBC,IAAtB,CAA2B,KAAKR,YAAhC;AACN;;AAEES,QAAAA,KAAK,GAAG,CAEP;;AAEDC,QAAAA,MAAM,CAACC,SAAD,EAAoB,CAEzB;;AAEDC,QAAAA,SAAS,GAAG;AAER,eAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKC,IAAL,CAAUC,MAA9B,EAAsCF,CAAC,EAAvC,EAA4C;AACxC,gBAAG,KAAKC,IAAL,CAAUD,CAAV,EAAaG,UAAb,EAAH,EAA8B;AACjC,WAJO,CAMR;AAEA;AAGA;;;AAEAC,UAAAA,OAAO,CAACC,GAAR,CAAY;AAAA;AAAA,4CAAaX,QAAzB;;AAEH,eAAK,IAAIM,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKC,IAAL,CAAUC,MAA9B,EAAsCF,CAAC,EAAvC,EAA4C;AACrC,iBAAKC,IAAL,CAAUD,CAAV,EAAaM,aAAb,CAA2BN,CAAC,GAAC,IAA7B;AACA,iBAAKC,IAAL,CAAUD,CAAV,EAAaO,QAAb,CAAsB,EAAtB;AACN,iBAAKN,IAAL,CAAUD,CAAV,EAAaQ,UAAb;AACA;AACD;;AAtDsC,O,UAE5BnB,Q,GAAW,I;;;;;iBAGU,E;;;;;;;iBAGG,I","sourcesContent":["import { _decorator, Component, Node, AudioSource, AudioClip, assert, game } from 'cc';\nconst { ccclass, property } = _decorator;\n\nimport {ReelController} from './ReelController';\nimport {AudioManager} from './Global/AudioManager';\n\n\n@ccclass('ReelManager')\nexport class ReelManager extends Component {\n\n\tpublic static Instance = null;\n\n \t@property({type: ReelController})\n\tprotected reel: ReelController[] = [];\n\n    @property({type: AudioClip})\n    public reelSound: AudioClip|null = null;\n\n    _audioSource: AudioSource = null!\n\n\tonLoad() {\n\t\tthis.Instance = this;\n\n        const audioSource = this.node.getComponent(AudioSource)! ;\n        assert(audioSource);\n        this._audioSource = audioSource;\n        \n\n        game.addPersistRootNode(this.node);\n\n\n        AudioManager.instance.init(this._audioSource);\n\t}\n\n    start() {\n\n    }\n\n    update(deltaTime: number) {\n        \n    }\n\n    onRunReal() {\n\n        for (var i = 0; i < this.reel.length; i ++) {\n            if(this.reel[i].getPlaying()) return ;\n        }\n\n        //AudioManager.instance.init(this.node.getComponent(AudioSource));\n\n        //console.log(AudioManager.instance);\n\n\n        //AudioManager.instance.playSound(this.reelSound);\n\n        console.log(AudioManager.instance);\n\n    \tfor (var i = 0; i < this.reel.length; i ++) {\n            this.reel[i].setStartDelay(i*0.08);\n            this.reel[i].setCount(40);\n    \t\tthis.reel[i].onRunEvent();\n\t    }\n    }\n}\n\n"]}