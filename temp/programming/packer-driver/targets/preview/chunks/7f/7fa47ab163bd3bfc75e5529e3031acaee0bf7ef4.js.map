{"version":3,"sources":["file:///E:/2.workspace/cocos%20creator/slot/SlotMachine/assets/scripts/ReelManager.ts"],"names":["_decorator","Component","ReelController","ccclass","property","ReelManager","type","AudioSource","onLoad","Instance","audioSource","node","getComponent","assert","_audioSource","game","addPersistRootNode","audioManager","instance","init","start","update","deltaTime","onRunReal","i","reel","length","getPlaying","setStartDelay","setCount","onRunEvent"],"mappings":";;;;;;;;;;;;;;;;;;;;AAASA,MAAAA,U,OAAAA,U;AAAYC,MAAAA,S,OAAAA,S;;AAGbC,MAAAA,c,iBAAAA,c;;;;;;;OAFF;AAAEC,QAAAA,OAAF;AAAWC,QAAAA;AAAX,O,GAAwBJ,U;;6BAKjBK,W,WADZF,OAAO,CAAC,aAAD,C,UAKLC,QAAQ,CAAC;AAACE,QAAAA,IAAI;AAAA;AAAA;AAAL,OAAD,C,UAGNF,QAAQ,CAACG,WAAD,C,sCARb,MACaF,WADb,SACiCJ,SADjC,CAC2C;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAU1CO,QAAAA,MAAM,GAAG;AACR,eAAKC,QAAL,GAAgB,IAAhB;AAEM,cAAMC,WAAW,GAAG,KAAKC,IAAL,CAAUC,YAAV,CAAuBL,WAAvB,CAApB;AACAM,UAAAA,MAAM,CAACH,WAAD,CAAN;AACA,eAAKI,YAAL,GAAoBJ,WAApB;AAEAK,UAAAA,IAAI,CAACC,kBAAL,CAAwB,KAAKL,IAA7B;AAEAM,UAAAA,YAAY,CAACC,QAAb,CAAsBC,IAAtB,CAA2B,KAAKL,YAAhC;AACN;;AAEEM,QAAAA,KAAK,GAAG,CAEP;;AAEDC,QAAAA,MAAM,CAACC,SAAD,EAAoB,CAEzB;;AAEDC,QAAAA,SAAS,GAAG;AAER,eAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKC,IAAL,CAAUC,MAA9B,EAAsCF,CAAC,EAAvC,EAA4C;AACxC,gBAAG,KAAKC,IAAL,CAAUD,CAAV,EAAaG,UAAb,EAAH,EAA8B;AACjC;;AAEJ,eAAK,IAAIH,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKC,IAAL,CAAUC,MAA9B,EAAsCF,CAAC,EAAvC,EAA4C;AACrC,iBAAKC,IAAL,CAAUD,CAAV,EAAaI,aAAb,CAA2BJ,CAAC,GAAC,IAA7B;AACA,iBAAKC,IAAL,CAAUD,CAAV,EAAaK,QAAb,CAAsB,EAAtB;AACN,iBAAKJ,IAAL,CAAUD,CAAV,EAAaM,UAAb;AACA;AACD;;AAzCsC,O,UAE5BrB,Q,GAAW,I;;;;;iBAGU,E;;;;;;;iBAGJ,I","sourcesContent":["import { _decorator, Component, Node } from 'cc';\nconst { ccclass, property } = _decorator;\n\nimport {ReelController} from './ReelController';\n\n@ccclass('ReelManager')\nexport class ReelManager extends Component {\n\n\tpublic static Instance = null;\n\n \t@property({type: ReelController})\n\tprotected reel: ReelController[] = [];\n\n    @property(AudioSource) \n    _audioSource: AudioSource = null!\n\n\tonLoad() {\n\t\tthis.Instance = this;\n\n        const audioSource = this.node.getComponent(AudioSource)! ;\n        assert(audioSource);\n        this._audioSource = audioSource;\n\n        game.addPersistRootNode(this.node);\n\n        audioManager.instance.init(this._audioSource);\n\t}\n\n    start() {\n\n    }\n\n    update(deltaTime: number) {\n        \n    }\n\n    onRunReal() {\n\n        for (var i = 0; i < this.reel.length; i ++) {\n            if(this.reel[i].getPlaying()) return ;\n        }\n\n    \tfor (var i = 0; i < this.reel.length; i ++) {\n            this.reel[i].setStartDelay(i*0.08);\n            this.reel[i].setCount(40);\n    \t\tthis.reel[i].onRunEvent();\n\t    }\n    }\n}\n\n"]}