{"version":3,"sources":["file:///E:/2.workspace/cocos%20creator/slot/SlotMachine/assets/scripts/Global/AudioManager.ts"],"names":["_decorator","Component","AudioClip","AudioSource","clamp01","ccclass","property","AudioManager","type","_audioSource","_self","onLoad","node","getComponent","console","log","reel","instance","_instance","playMusic","loop","playing","playReel","playSound","clip","volumeScale","playOneShot","setMusicVolume","flag","volume"],"mappings":";;;;;;;;;;;;;;AAASA,MAAAA,U,OAAAA,U;AAAYC,MAAAA,S,OAAAA,S;AACZC,MAAAA,S,OAAAA,S;AAAWC,MAAAA,W,OAAAA,W;AAA2BC,MAAAA,O,OAAAA,O;;;;;;;OACzC;AAAEC,QAAAA,OAAF;AAAWC,QAAAA;AAAX,O,GAAwBN,U;;8BAGjBO,Y,WADZF,OAAO,CAAC,cAAD,C,UAOHC,QAAQ,CAAC;AAACE,QAAAA,IAAI,EAAEN;AAAP,OAAD,C,sCAPb,MACaK,YADb,SACmCN,SADnC,CAC6C;AAAA;AAAA;AAAA,eAIzCQ,YAJyC,GAI1B,IAJ0B;;AAAA;;AAAA,eAS3CC,KAT2C,GASnC,IATmC;AAAA;;AAW3CC,QAAAA,MAAM,GAAG;AACR,eAAKF,YAAL,GAAoB,KAAKG,IAAL,CAAUC,YAAV,CAAuBV,WAAvB,CAApB;AACAO,UAAAA,KAAK,GAAG,IAAR;AACAI,UAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyBL,KAAzB,EAAgCA,KAAK,CAACM,IAAtC;AACAF,UAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyB,IAAzB,EAA+B,KAAKC,IAApC;AACA;;AAEoB,mBAARC,QAAQ,GAAI;AACnB,cAAI,KAAKC,SAAT,EAAoB;AAChB,mBAAO,KAAKA,SAAZ;AACH;;AAED,eAAKA,SAAL,GAAiB,IAAIX,YAAJ,EAAjB;AACA,iBAAO,KAAKW,SAAZ;AACH;;AAEDC,QAAAA,SAAS,CAAEC,IAAF,EAAiB;AAEtB,eAAKX,YAAL,CAAkBW,IAAlB,GAAyBA,IAAzB;;AACA,cAAI,CAAC,KAAKX,YAAL,CAAkBY,OAAvB,EAAgC;AAC5B,iBAAKZ,YAAL,CAAkBY,OAAlB;AACH;AACJ;;AAEDC,QAAAA,QAAQ,GAAG;AACV,eAAKC,SAAL,CAAe,KAAKP,IAApB;AACA;;AAEDO,QAAAA,SAAS,CAAEC,IAAF,EAAQC,WAAR,EAAkC;AAAA,cAA1BA,WAA0B;AAA1BA,YAAAA,WAA0B,GAAJ,CAAI;AAAA;;AAE1CX,UAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyBL,KAAzB,EAAgCA,KAAK,CAACM,IAAtC;AACAF,UAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyB,IAAzB,EAA+B,KAAKC,IAApC;;AAEG,eAAKP,YAAL,CAAkBiB,WAAlB,CAA8BF,IAA9B,EAAoCC,WAApC;AACH;;AAEDE,QAAAA,cAAc,CAAEC,IAAF,EAAgB;AAE1BA,UAAAA,IAAI,GAAGxB,OAAO,CAACwB,IAAD,CAAd;AACA,eAAKnB,YAAL,CAAkBoB,MAAlB,GAA2BD,IAA3B;AACH;;AAnDwC,O,UAE1BV,S;;;;;iBAKa,I","sourcesContent":["import { _decorator, Component, Node } from 'cc';\nimport { AudioClip, AudioSource, assert, warn, clamp01, resources } from \"cc\";\nconst { ccclass, property } = _decorator;\n\n@ccclass('AudioManager')\nexport class AudioManager  extends Component {\n\n    private static _instance: AudioManager;\n    \n    _audioSource = null;\n\n    @property({type: AudioClip})\n \tpublic reel: AudioClip|null = null;\n\n \t_self = null;\n\n \tonLoad() {\n \t\tthis._audioSource = this.node.getComponent(AudioSource);\n \t\t_self = this;\n \t\tconsole.log('=-=-1-=-=', _self, _self.reel);\n \t\tconsole.log('=-=-2-=-=', this, this.reel);\n \t}\n\n    static get instance () {\n        if (this._instance) {\n            return this._instance;\n        }\n\n        this._instance = new AudioManager();\n        return this._instance;\n    }\n\n    playMusic (loop: boolean) {\n\n        this._audioSource.loop = loop;\n        if (!this._audioSource.playing) {\n            this._audioSource.playing();\n        }\n    }\n\n    playReel() {\n    \tthis.playSound(this.reel);\n    }\n\n    playSound (clip, volumeScale: number = 1 ) {\n\n    \tconsole.log('=-=-3-=-=', _self, _self.reel);\n    \tconsole.log('=-=-4-=-=', this, this.reel);\n\n        this._audioSource.playOneShot(clip, volumeScale);\n    }\n\n    setMusicVolume (flag: number) {\n\n        flag = clamp01(flag);\n        this._audioSource.volume = flag;\n    }\n\n}"]}